import example.*
describe "test cajero"{
	var pepe = new Persona()
	var juana = new Persona()
	
	test("Pepe abre una cuenta en el cajero. Luego consulta su saldo."){
		cajero.abrirCuenta(pepe, 4321)	
		assert.equals(0, cajero.consultarSaldo(pepe, 4321))
	}
	test("Pepe abre una cuenta en el cajero. Luego consulta su saldo pero se olvidó el pin por lo que ingresa uno erróneo."){
		cajero.abrirCuenta(pepe, 4321)	
		assert.throwsExceptionWithMessage("Pin incorrecto", {cajero.consultarSaldo(pepe, 5432)})
	}
	test("Apertura, Depositar y Consultar saldo"){
		cajero.abrirCuenta(pepe, 4321)
		cajero.depositar(pepe, 1000)	
		assert.equals(1000, cajero.consultarSaldo(pepe, 4321))
	}	
	test("Apertura, Depositar, Retirar menos de lo depositado y Consultar Saldo"){
		cajero.abrirCuenta(pepe, 4321)	
		cajero.depositar(pepe, 1000)
		cajero.retirar(pepe, 900, 4321)
		assert.equals(100, cajero.consultarSaldo(pepe, 4321))
	}
	test("Apertura, Retirar"){
		cajero.abrirCuenta(pepe, 4321)	
		assert.throwsExceptionWithMessage("Saldo insuficiente", {cajero.retirar(pepe, 900, 4321)})
	}	
	test("Pepe y Juana poseen una cuenta en el cajero. Pepe le realiza una transferencia."){
		cajero.abrirCuenta(pepe, 4321)	
		cajero.abrirCuenta(juana, 4321)	
		cajero.depositar(pepe, 1000)
		cajero.transferir(pepe, juana, 900, 4321)
		assert.equals(100, cajero.consultarSaldo(pepe, 4321))
		assert.equals(900, cajero.consultarSaldo(juana, 4321))
	}
	test("Pepe y Juana poseen una cuenta en el cajero. Pepe le realiza una transferencia pero no tiene ese saldo."){
		cajero.abrirCuenta(pepe, 4321)	
		cajero.abrirCuenta(juana, 4321)	
		cajero.depositar(pepe, 1000)
		assert.throwsExceptionWithMessage("Saldo insuficiente", {cajero.transferir(pepe, juana, 1500, 4321)})
	}
	test("Pepe posee una cuenta en el cajero. Pepe le realiza una transferencia a Maria, que no tiene cuenta."){
		cajero.abrirCuenta(pepe, 4321)	
		cajero.depositar(pepe, 1000)
		assert.throwsExceptionWithMessage("Cuenta inexistente", {cajero.transferir(pepe, juana, 900, 4321)})
	}
	test("Pepe posee una cuenta en el cajero y quiere abrir otra")
	{
		cajero.abrirCuenta(pepe, 4321)	
		assert.throwsExceptionWithMessage("Ya existe la cuenta",{cajero.abrirCuenta(pepe, 5432)})	
	}
	
}